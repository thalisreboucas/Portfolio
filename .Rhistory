blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown:serve_site()
library(blogdown)
blogdown:serve_site()
library("blogdown")
blogdown:serve_site()
install.packages("blogdown")
install.packages("blogdown")
blogdown:serve_site()
blogdown:serve_site()
blogdown:serve_site()
blogdown::serve_site()
blogdown:serve_site()
blogdown::serve_site()
blogdown:serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::new_post(teste)
blogdown::new_post("teste")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(ggplot2)
library(ggplot2)
Normal <- ggplot(  ) + # Para criar uma Figura
stat_function( fun = function (x)dnorm(x,0,1), # usando o fun com o function para criar a normal
geom="area" , # Para deixar o gráfico todo preenchido
xlim = c(-3,3), # Para definir meu eixo X
alpha = .5, fill = "blue" , col = "blue") + # Colocando transparencia e cores
ylab("f(x)") + xlab("X") + ggtitle("Distribuição Normal") + # colocando Títulos
theme_minimal() # deixando o grafico mais bonito =)
Normal
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
install.packages('golem')
clear
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(collapse = TRUE)
summary(cars)
fit <- lm(dist ~ speed, data = cars)
fit
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
library(pacman)
pacman::p_load(dplyr,ggplot2,plotly)
# Criando o Gráfico de uma normal
Normal <- ggplot(  ) + # Para criar uma Figura
stat_function( fun = function (x)dnorm(x,0,1), # usando o fun com o function para criar a normal
geom="area" , # Para deixar o gráfico todo preenchido
xlim = c(-3,3), # Para definir meu eixo X
alpha = .5, fill = "blue" , col = "blue") + # Colocando transparencia e cores
ylab("f(x)") + xlab("X") + ggtitle("Distribuição Normal") + # colocando Títulos
theme_minimal() # deixando o grafico mais bonito =)
Normal
Normais <- Normal + stat_function( fun = function (x)dnorm(x,-3,1.2), # usando outro fun com o function para criar a normal
geom="area" , # Para deixar o gráfico todo preenchido
xlim = c(-3,3), # Para definir meu eixo X
alpha = .5, fill = "red" , col = "red") + # Colocando transparencia e cores
ylab("f(x)") + xlab("X") + ggtitle("Distribuições Normais") + # colocando Títulos
theme_minimal()
Normais
ggplotly(Normais)
ggplotly(Normais) %>%
add_markers(x = 1.5,y = 0.37, # Adicionando um Marcador
marker = list(color = 'rgba(0, 0, 255,0.5)', size = 10))  %>% # Colocando cor e tamanho
add_annotations(x=1.6,  y=0.37,  xref = "x",  yref = "y", #Colocando um texto
text = "Média = 0 e Desvio-Padrão = 1", # Adicionado o Texto
xanchor = 'left',showarrow = F , font = list(color = 'rgba(0, 0, 255,0.5)', #Posicionando e colocando cor
family = 'calibri light', size = 14)  ) %>%  # Colocando fonte e tamanho
add_markers(x = 1.5,y = 0.35, marker = list(color = 'rgba(255, 0, 0,0.5)', size = 10)) %>%
add_annotations(  x=1.6,  y=0.35,  xref = "x",  yref = "y",text = "Média = 0 e Desvio-Padrão = 1",
xanchor = 'left',  showarrow = F ,font = list(color = 'rgba(255, 0, 0,0.5)',
family = 'calibri light', size = 14)  )
normal <- ggplot( ) +
stat_function( fun = dnorm ,
geom="area" , xlim = c(-5,7),
alpha = .5, fill = "blue" , col = "blue") +
stat_function(
fun = function(x) dnorm(x,2,2) ,
geom="area" , xlim = c(-5,7),
alpha = .5, fill = "orange",col = "orange" ) + ylab("f(x)") + xlab("X") +
ggtitle( label ="Gráfico das Distribuições Normais  " ) +
stat_function(
fun = function(x) dnorm(x,-3,1.5) ,
geom="area" , xlim = c(-5,8),
alpha = .5, fill = "red" ,col = "red") +
stat_function(
fun = function(x) dnorm(x,4,3) ,
geom="area" , xlim = c(-5,8),
alpha = .5, fill = "green" ,col = "green") +
theme_minimal()
normal <- ggplot( ) +
stat_function( fun = dnorm ,
geom="area" , xlim = c(-5,7),
alpha = .5, fill = "blue" , col = "blue") +
stat_function(
fun = function(x) dnorm(x,2,2) ,
geom="area" , xlim = c(-5,7),
alpha = .5, fill = "orange",col = "orange" ) + ylab("f(x)") + xlab("X") +
ggtitle( label ="Gráfico das Distribuições Normais  " ) +
stat_function(
fun = function(x) dnorm(x,-3,1.5) ,
geom="area" , xlim = c(-5,8),
alpha = .5, fill = "red" ,col = "red") +
stat_function(
fun = function(x) dnorm(x,4,3) ,
geom="area" , xlim = c(-5,8),
alpha = .5, fill = "green" ,col = "green") +
theme_minimal()
ggplotly(normal ) %>%
add_markers(x = 4.5,y = 0.37, showlegend = F , marker = list(color = 'rgba(0, 0, 255,0.5)', size = 10)) %>%
add_annotations(  x=4.7,  y=0.37,  xref = "x",  yref = "y",text = "Média = 0 e Desvio-Padrão = 1",
xanchor = 'left',  showarrow = F ,font = list(color = 'rgba(0, 0, 255,0.5)',
family = 'calibri light', size = 14)  )  %>%
add_markers(x = 4.5,y = 0.35, showlegend = F , marker = list(color = 'rgba(255, 0, 0,0.7)', size = 10)) %>%
add_annotations(  x=4.7,  y=0.35,  xref = "x",  yref = "y",text = "Média =-3 e Desvio-Padrão = 1,5",                                                   xanchor = 'left',  showarrow = F , font = list(color = 'rgba(255, 0, 0,0.5)',
family = 'calibri light', size = 14)  ) %>%
add_markers(x = 4.5,y = 0.33, showlegend = F , marker = list(color = 'rgb(255, 125, 35,0.5)', size = 10)) %>%
add_annotations(  x=4.7,  y=0.33,  xref = "x",  yref = "y", text = "Média = 2 e Desvio-Padrão = 2",
xanchor = 'left',  showarrow = F ,   font = list(color = 'rgb(255, 125, 35,0.5)',
family = 'calibri light', size = 14)) %>%
add_markers(x = 4.5,y = 0.31, showlegend = F , marker = list(color = 'rgb(0, 255, 0,0.5)', size = 10)) %>%
add_annotations(  x=4.7,  y=0.31,  xref = "x",  yref = "y", text = "Média = 4 e Desvio-Padrão = 3",
xanchor = 'left',  showarrow = F ,   font = list(color = 'rgb(0, 255, 0,0.5)',
family = 'calibri light', size = 14))
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_convert(unsafe = TRUE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
shiny::runApp('E:/edime/Thalis/CadernoR/AlgoritimoEM/shiny/AlEM')
blogdown::serve_site()
blogdown::new_post(Funil de vendas,author = "Thalis Rebouças")
blogdown::new_post("Funil de vendas"",author = "Thalis Rebouças")
blogdown::new_post("Funil de vendas")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
setwd("E:/edime/Thalis/CadernoR/relatorio")
RAW_DF <- read_xlsx("DF_RAW.xlsx")
# abrindo os pacotes que utilizarei até o final do relatorio
library(pacman)
pacman::p_load(ggplot2, hrbrthemes ,knitr,rmdformats, dplyr,plotly,readxl,skimr,reticulate,tidyr,xtable,corrplot)
RAW_DF <- read_xlsx("DF_RAW.xlsx")
RAW_DF %>% skim()
RAW_DF %>% skim()
DF <- RAW_DF %>%  mutate_all(replace_na, 0)
corrplot(cor(DF), method = "color")
# grafico de rosca
DF %>% group_by(`Estado Civil`) %>%
summarise(contagem = n()) %>%
plot_ly(labels = ~`Estado Civil`, values = ~contagem ,
textposition = 'inside',
marker = list(colors = c('rgba(101, 162, 218,0.8)','rgba(116, 23, 218,0.8)'),
line = list(color = '#FFFFFF', width = 1)),
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))%>%
add_pie(hole = 0.3) %>%
layout(title = "Gráfico do Estado Civil da companhia MB",   legend = list(x = 0.029, y = 1.038,
font = list(size = 10)),
margin = list(l = 100, r = 20, t = 70, b = 70),
paper_bgcolor = '#f8f8ff')
# grafico região de procedência
DF %>% group_by(`Região de Procedência`) %>%
summarise(contagem = n()) %>%
plot_ly(labels = ~`Região de Procedência`, values = ~contagem ,
textposition = 'inside',
marker = list(colors = c('rgba(101, 162, 218,0.8)','rgba(116, 23, 218,0.8)'),
line = list(color = '#FFFFFF', width = 1)),
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))%>%
add_pie(hole = 0.3) %>%
layout(title = "Gráfico da Região de Procedência companhia MB",   legend = list(x = 0.029, y = 1.038,
font = list(size = 10)),
margin = list(l = 100, r = 20, t = 70, b = 70),
paper_bgcolor = '#f8f8ff')
# grafico de barras grau de instrução
#solteiros
gi_s<- DF  %>% group_by(`Grau de Instrução`) %>%
filter(`Estado Civil`== "solteiro") %>%
summarise(contagem = n())
#casados
gi_c <-  DF  %>% group_by(`Grau de Instrução`) %>%
filter(`Estado Civil`== "casado") %>%
summarise(contagem = n())
df_gi <- data.frame(gi_s,gi_c$contagem)
names(df_gi)
fig_gi <- plot_ly(df_gi,x = ~Grau.de.Instrução, y = ~contagem, type = 'bar',
name = 'solteiro',
marker = list(color = 'rgba(116, 23, 218,0.8)'))
fig_gi <- fig_gi %>% add_trace(df_c, y = ~gi_c.contagem, name = 'casado',
marker = list(color = 'rgba(101, 162, 218,0.8)'))
fig_gi <- fig_gi %>% add_trace(gi_c, y = ~gi_c.contagem, name = 'casado',
marker = list(color = 'rgba(101, 162, 218,0.8)'))
fig_gi %>%
layout(title = "Gráfico do Grau de instrução por Estado Civil da companhia MB ",
legend = list(x = 0.029, y = 1.038,
font = list(size = 10)),
margin = list(l = 100, r = 20, t = 70, b = 70),
yaxis = list(title = ""),
xaxis = list(title = "Grau de Instrução"),
paper_bgcolor = '#f8f8ff')
fig_gi <- plot_ly(df_gi,x = ~Grau.de.Instrução, y = ~contagem, type = 'bar',
name = 'solteiro',
marker = list(color = 'rgba(116, 23, 218,0.8)'))
fig_gi <- fig_gi %>% add_trace(gi_c, y = ~gi_c.contagem, name = 'casado',
marker = list(color = 'rgba(101, 162, 218,0.8)'))
fig_gi %>%
layout(title = "Gráfico do Grau de instrução por Estado Civil da companhia MB ",
legend = list(x = 0.029, y = 1.038,
font = list(size = 10)),
margin = list(l = 100, r = 20, t = 70, b = 70),
yaxis = list(title = ""),
xaxis = list(title = "Grau de Instrução"),
paper_bgcolor = '#f8f8ff')
DF   %>%
group_by(`Estado Civil`) %>%
summarise(mínimo = min(Anos),P25 = quantile(Anos,0.25) ,Mediana = median(Anos) ,média = mean(Anos), Desvio_Padrão = sd(Anos),P75 = quantile(Anos,0.75),max(Anos))  %>% xtable()
DF   %>%
group_by(`Estado Civil`) %>%
summarise(mínimo = min(Anos),P25 = quantile(Anos,0.25) ,Mediana = median(Anos) ,média = mean(Anos), Desvio_Padrão = sd(Anos),P75 = quantile(Anos,0.75),max(Anos))
DF %>% filter(`Estado Civil` == "casado") %>%
group_by(`N de Filhos`) %>%
summarise( contagem = n()) %>%
plot_ly(x = ~`N de Filhos`, y = ~contagem, type = 'bar',
name = 'solteiro',
marker = list(color = 'rgba(101, 162, 218,0.8)')) %>%
layout(title = "Gráfico do Número de Filhos",
legend = list(x = 0.029, y = 1.038,
font = list(size = 10)),
margin = list(l = 100, r = 20, t = 70, b = 70),
yaxis = list(title = ""),
xaxis = list(title = "Números de Filhos"),
paper_bgcolor = '#f8f8ff')
DF %>% filter(`Estado Civil` == "casado") %>%
select(`N de Filhos`) %>%
summarise( Mínimo = min(`N de Filhos`), P25  = quantile(`N de Filhos`, 0.25),
Mediana = median(`N de Filhos`),Média = mean(`N de Filhos`),
Desvio_Padrão = sd(`N de Filhos`), P75 = quantile(`N de Filhos`,0.75) ,
Máximo = max(`N de Filhos`) ) %
DF %>% filter(`Estado Civil` == "casado") %>%
select(`N de Filhos`) %>%
summarise( Mínimo = min(`N de Filhos`), P25  = quantile(`N de Filhos`, 0.25),
Mediana = median(`N de Filhos`),Média = mean(`N de Filhos`),
Desvio_Padrão = sd(`N de Filhos`), P75 = quantile(`N de Filhos`,0.75) ,
Máximo = max(`N de Filhos`) ) %>%
xtable()
DF %>% filter(`Estado Civil` == "casado") %>%
select(`N de Filhos`) %>%
summarise( Mínimo = min(`N de Filhos`), P25  = quantile(`N de Filhos`, 0.25),
Mediana = median(`N de Filhos`),Média = mean(`N de Filhos`),
Desvio_Padrão = sd(`N de Filhos`), P75 = quantile(`N de Filhos`,0.75) ,
Máximo = max(`N de Filhos`) )
DF %>% select(`Salario (x Sal Min)`) %>%  summarise(  Mínimo = min(.), P25  = quantile(`Salario (x Sal Min)`, 0.25),
Mediana = median(`Salario (x Sal Min)`),Média = mean(`Salario (x Sal Min)`),
Desvio_Padrão = sd(`Salario (x Sal Min)`), P75 = quantile(`Salario (x Sal Min)`,0.75) ,
Máximo = max(`Salario (x Sal Min)`) )
DF %>%  plot_ly(
y = ~`Salario (x Sal Min)`,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Salário(min)',
points = 'all',
jitter = 0,
scalemode = 'count',
meanline = list(
visible = T
),
color = I('#bebada'),
marker = list(
line = list(
width = 2,
color = '#bebada'
),
symbol = 'line-ns'
)) %>%
layout(title = "Gráfico Boxplot dos Salários dos Funcionários",
legend = list(x = 0.029, y = 1.038,
font = list(size = 10)),
margin = list(l = 100, r = 20, t = 70, b = 70),
yaxis = list( title = " ",zeroline = F
),paper_bgcolor = '#f8f8ff'
)
DF %>%  plot_ly(x = ~`Grau de Instrução`  ,
y = ~`Salario (x Sal Min)`,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
),
x0 = 'Salário(min)',
points = 'all',
jitter = 0,
scalemode = 'count',
meanline = list(
visible = T
),
color = I('#bebada'),
marker = list(
line = list(
width = 2,
color = '#bebada'
),
symbol = 'line-ns'
)) %>%
layout(title = "Gráfico Boxplot dos Salários dos Funcionários por Grau de Instrução",
legend = list(x = 0.029, y = 1.038,
font = list(size = 10)),
margin = list(l = 100, r = 20, t = 70, b = 70),
yaxis = list( title = " ",zeroline = F
),
xaxis = list( title = "Grau de Instrução",zeroline = F
),
paper_bgcolor = '#f8f8ff'
)
